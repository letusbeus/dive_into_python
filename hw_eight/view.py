def task_convert_txt_pairs_to_json():
    print('1. Вспоминаем задачу 3 из прошлого семинара. Мы сформировали текстовый файл с псевдоименами и '
          'произведением чисел.\nНапишите функцию, которая создаёт из созданного ранее файла новый с данными в '
          'формате JSON.\nИмена пишите с большой буквы. Каждую пару сохраняйте с новой строки.\n')


def task_add_user():
    print('Задание №2. Напишите функцию, которая в бесконечном цикле запрашивает имя, личный идентификатор и уровень '
          'доступа (от 1 до 7).\nПосле каждого ввода добавляйте новую информацию в JSON файл.\nПользователи '
          'группируются по уровню доступа.\nИдентификатор пользователя выступает ключом для имени.\nУбедитесь, что '
          'все идентификаторы уникальны независимо от уровня доступа.\nПри перезапуске функции уже записанные в файл '
          'данные должны сохраняться.')


def task_update_user_data():
    print('Задание №4. Прочитайте созданный в прошлом задании csv файл без использования csv.DictReader.'
          '\nДополните id до 10 цифр незначащими нулями.\nВ именах первую букву сделайте прописной.'
          '\nДобавьте поле хеш на основе имени и идентификатора.\nПолучившиеся записи сохраните в json файл, где '
          'каждая строка csv файла представлена как отдельный json словарь.\nИмя исходного и конечного файлов '
          'передавайте как аргументы функции.')


def task_directory_processing():
    print('Напишите функцию, которая получает на вход директорию и рекурсивно обходит её и все вложенные директории.'
          '\nРезультаты обхода сохраните в файлы json, csv.'
          '\n○ Для дочерних объектов указывайте родительскую директорию.'
          '\n○ Для каждого объекта укажите файл это или директория.'
          '\n○ Для файлов сохраните его размер в байтах, а для директорий - размер файлов в ней с учётом всех вложенных'
          ' файлов и директорий.'
          '\nСоберите из созданных на уроке и в рамках домашнего задания функций пакет для работы с файлами разных '
          'форматов.\n')
