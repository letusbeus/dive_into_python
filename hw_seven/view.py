def task_generate_number_pairs():
    print('1. Напишите функцию, которая заполняет файл (добавляет в конец) случайными парами чисел.'
          '\n✔ Первое число int, второе - float;'
          '\n✔ Числа разделены вертикальной чертой;'
          '\n✔ Минимальное число - -1000, максимальное - +1000.'
          '\n✔ Количество строк и имя файла передаются как аргументы функции.\n')


def task_generate_aliases():
    print('2. Напишите функцию, которая генерирует псевдоимена.'
          '\n✔ Имя должно начинаться с заглавной буквы;'
          '\n✔ Имя должно состоять из 4-7 букв;'
          '\n✔ Имя обязательно должно содержать гласные.'
          '\nПолученные имена сохраните в файл.\n')


def task_generate_name_number_pairs():
    print('3. Напишите функцию, которая открывает на чтение созданные в прошлых задачах файлы с числами и именами. '
          'Перемножьте пары чисел. \nВ новый файл сохраните имя и произведение:'
          '\n✔ Если результат умножения отрицательный, сохраните имя строчными буквами '
          'и произведение по модулю;\n✔ Если результат умножения положительный, сохраните имя прописными буквами и '
          'произведение округлённое до целого. \nВ результирующем файле должно быть столько же строк, '
          'сколько в более длинном файле.\nПри достижении конца более короткого файла возвращайтесь в его начало.\n')


def task_create_file():
    print('4. Создайте функцию, которая создаёт файлы с указанным расширением.\nФункция принимает следующие параметры:'
          '\n✔ расширение;'
          '\n✔ минимальная длина случайно сгенерированного имени, по умолчанию 6;'
          '\n✔ максимальная длина случайно сгенерированного имени, по умолчанию 30;'
          '\n✔ минимальное число случайных байт, записанных в файл, по умолчанию 256;'
          '\n✔ максимальное число случайных байт, записанных в файл, по умолчанию 4096;'
          '\n✔ количество файлов, по умолчанию 42;'
          '\nИмя файла и его размер должны быть в рамках переданного диапазона.')


def task_create_files():
    print('5. Доработаем предыдущую задачу.\n✔ Создайте новую функцию, которая генерирует файлы с разными расширениями.'
          '\n✔ Расширения и количество файлов функция принимает в качестве параметров.'
          '\n✔ Количество переданных расширений может быть любым.'
          '\n✔ Количество файлов для каждого расширения различно.'
          '\n✔ Внутри используйте вызов функции из прошлой задачи.')


def task_create_files_in_current_dir():
    print('6. Дорабатываем функции из предыдущих задач'
          '\n✔ Генерируйте файлы в указанную директорию — отдельный параметр функции.'
          '\n✔ Отсутствие/наличие директории не должно вызывать ошибок в работе функции (добавьте проверки).'
          '\n✔ Существующие файлы не должны удаляться/изменяться в случае совпадения имён.')


def task_group_rename():
    print('1. Напишите функцию группового переименования файлов. Она должна:'
          '\n2. принимать параметр желаемое конечное имя файлов. '
          'При переименовании в конце имени добавляется порядковый номер.'
          '\n3. принимать параметр количество цифр в порядковом номере.'
          '\n4. принимать параметр расширение исходного файла. '
          'Переименование должно работать только для этих файлов внутри каталога.'
          '\n5. принимать параметр расширение конечного файла.'
          '\n6. принимать диапазон сохраняемого оригинального имени.'
          '\n7. Например для диапазона [3, 6] берутся буквы с 3 по 6 из исходного имени файла.'
          '\nК ним прибавляется желаемое конечное имя, если оно передано. Далее счётчик файлов и расширение.')


def task_sort_files_by_ext():
    print('✔ Создайте функцию для сортировки файлов по директориям: видео, изображения, текст и т.п.'
          '\n✔ Каждая группа включает файлы с несколькими расширениями.'
          '\n✔ В исходной папке должны остаться только те файлы, которые не подошли для сортировки.')
