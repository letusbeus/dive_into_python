def task_animal_farm():
    print('Создайте класс-фабрику.'
          '\n○ Класс принимает тип животного (название одного из созданных классов) и параметры для этого типа.'
          '\n○ Внутри класса создайте экземпляр на основе переданного типа и верните его из класса-фабрики.'
          '\nЗадачи должны решаться через вызов методов экземпляра.\n')


def task_cashier():
    print('Напишите программу банкомат'
          '\n✔ Начальная сумма равна нулю'
          '\n✔ Допустимые действия: пополнить, снять, выйти'
          '\n✔ Сумма пополнения и снятия кратны 50 у.е.'
          '\n✔ Процент за снятие — 1.5% от суммы снятия, но не менее 30 и не более 600 у.е.'
          '\n✔ После каждой третей операции пополнения или снятия начисляются проценты - 3%'
          '\n✔ Нельзя снять больше, чем на счёте'
          '\n✔ При превышении суммы в 5 млн, вычитать налог на богатство 10% перед каждой операцией, даже ошибочной'
          '\n✔ Любое действие выводит сумму денег'
          '\n✔ Сохраняйте все операции поступления и снятия средств в список.'
          '\n✔ Используйте методы класса и свойства.'
          '\nЗадачи должны решаться через вызов методов экземпляра.\n')


def multiplicity_message():
    return 'Enter an amount that is a multiple of 50: '


def goodbye():
    return 'Goodbye!'

def no_operations_message():
    return 'No activity in current session.'

def operations_message():
    return 'Operations performed in the current session:\n'